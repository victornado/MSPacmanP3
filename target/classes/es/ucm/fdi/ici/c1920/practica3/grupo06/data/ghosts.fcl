FUNCTION_BLOCK FuzzyGhosts	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	ticks : REAL;
	cornerDistance : REAL;
	powPillsLeft : REAL;
	ghostEdibleTime: REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	search : REAL;
	attack : REAL;
	defend : REAL;
	run : REAL;
END_VAR

FUZZIFY ticks			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0, 1) (30, 0) ; 
	TERM high := (25, 0) (35, 1);
END_FUZZIFY
FUZZIFY cornerDistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (15, 1) (25, 0) ; 
	TERM notNear := (20, 0) (25, 1);
END_FUZZIFY

FUZZIFY powPillsLeft		// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM few := (0, 1) (1, 1) (2, 0) ; 
	TERM some := (2, 1) (3, 0);
	TERM lot := (3, 1) (4, 1);
END_FUZZIFY

FUZZIFY ghostEdibleTime		// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM null:= (0, 1) (1, 0);
	TERM low := (1, 1) (20, 0) ; 
	TERM high := (15, 0) (30, 1);
END_FUZZIFY

DEFUZZIFY search			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM null := (0, 1) (8, 1) (12, 0);
	TERM half := (12,1) (18, 1) (22, 0);
	TERM high := (22, 1) (28, 1) (30, 0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY attack			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	
	TERM null := (0, 1) (8, 1) (12, 0);
	TERM half := (12,1) (18, 1) (22, 0);
	TERM high := (22, 1) (28, 1) (30, 0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY defend			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }	
	TERM null := (0, 1) (8, 1) (12, 0);
	TERM half := (12,1) (18, 1) (22, 0);
	TERM high := (22, 1) (28, 1) (30, 0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY run			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM null := (0, 1) (8, 1) (12, 0);
	TERM half := (12,1) (18, 1) (22, 0);
	TERM high := (22, 1) (28, 1) (30, 0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF ghostEdibleTime is low THEN attack IS half;
	RULE 2 : IF ghostEdibleTime is high THEN run IS high;
	RULE 3 : IF ghostEdibleTime is null THEN run IS null;
	RULE 4 : IF ticks IS high AND ghostEdibleTime IS low THEN search IS high;
	RULE 5 : IF cornerDistance IS notNear AND ghostEdibleTime IS null THEN attack is high;
	RULE 6 : IF cornerDistance IS near AND powPillsLeft IS few THEN attack IS high;
	RULE 7 : IF cornerDistance IS near AND powPillsLeft IS lot THEN defend IS high;
	RULE 8 : IF cornerDistance IS near AND powPillsLeft IS some THEN attack IS half;
	RULE 9 : IF cornerDistance IS near AND powPillsLeft IS some THEN defend IS half;
END_RULEBLOCK

END_FUNCTION_BLOCK